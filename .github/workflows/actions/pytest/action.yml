# Copyright 2023 Goldman Sachs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PyTest

description: PyTest

inputs:
  os:
    description: 'Operating System'
    required: true
  python-version:
    description: 'Python Version'
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup
      uses: ./.github/workflows/actions/setup
      with:
        python-version: ${{ inputs.python-version }}

    - name: Poetry Install Dependencies
      uses: ./.github/workflows/actions/poetry_install_dependencies

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: "zulu"
        java-version: "11"

    - name: Build Legend Server
      shell: bash
      run: |
        mvn --batch-mode clean package -f ./tests/resources/legend/server/pylegend-sql-server/pom.xml

    - name: Run PyTest
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          source .venv/Scripts/activate
        else
          source .venv/bin/activate
        fi
        echo "Pytest executable is:" $(which pytest)
        echo "Running pytest ./tests --cov=pylegend --cov=tests -o log_cli=true -o log_cli_level=INFO -o log_cli_format=\"%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)\" -o log_cli_date_format=\"%Y-%m-%d %H:%M:%S\" --junitxml=./test-results/pytest_result_${{ inputs.os }}_${{ inputs.python-version }}.xml --cov-report=xml:./coverage/coverage_${{ inputs.os }}_${{ inputs.python-version }}.xml"
        pytest ./tests --cov=pylegend --cov=tests -o log_cli=true -o log_cli_level=INFO -o log_cli_format="%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)" -o log_cli_date_format="%Y-%m-%d %H:%M:%S" --junitxml=./test-results/pytest_result_${{ inputs.os }}_${{ inputs.python-version }}.xml --cov-report=xml:./coverage/coverage_${{ inputs.os }}_${{ inputs.python-version }}.xml
        echo "Done with running pytest"
